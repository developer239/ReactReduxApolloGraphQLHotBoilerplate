// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Typography nl2br renders with new lines replaced by br elements 1`] = `
<Provider
  mocks={Array []}
>
  <MockedProvider
    addTypename={false}
    mocks={Array []}
  >
    <ApolloProvider
      client={
        ApolloClient {
          "__operations_cache__": Map {},
          "cache": InMemoryCache {
            "addTypename": false,
            "cacheKeyRoot": CacheKeyNode {
              "children": null,
              "key": null,
            },
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {},
          },
          "clearStoreCallbacks": Array [],
          "clientAwareness": Object {},
          "defaultOptions": Object {},
          "disableNetworkFetches": false,
          "link": ApolloLink {
            "request": [Function],
          },
          "localState": LocalState {
            "cache": InMemoryCache {
              "addTypename": false,
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "fragmentMatcher": HeuristicFragmentMatcher {},
                "resultCaching": true,
              },
              "data": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "maybeBroadcastWatch": [Function],
              "optimisticData": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "silenceBroadcast": false,
              "storeReader": StoreReader {
                "cacheKeyRoot": CacheKeyNode {
                  "children": null,
                  "key": null,
                },
                "executeSelectionSet": [Function],
                "executeStoreQuery": [Function],
              },
              "storeWriter": StoreWriter {},
              "typenameDocumentCache": Map {},
              "watches": Set {},
            },
            "client": [Circular],
          },
          "mutate": [Function],
          "query": [Function],
          "queryDeduplication": true,
          "reFetchObservableQueries": [Function],
          "resetStore": [Function],
          "resetStoreCallbacks": Array [],
          "ssrMode": false,
          "store": DataStore {
            "cache": InMemoryCache {
              "addTypename": false,
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "fragmentMatcher": HeuristicFragmentMatcher {},
                "resultCaching": true,
              },
              "data": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "maybeBroadcastWatch": [Function],
              "optimisticData": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "silenceBroadcast": false,
              "storeReader": StoreReader {
                "cacheKeyRoot": CacheKeyNode {
                  "children": null,
                  "key": null,
                },
                "executeSelectionSet": [Function],
                "executeStoreQuery": [Function],
              },
              "storeWriter": StoreWriter {},
              "typenameDocumentCache": Map {},
              "watches": Set {},
            },
          },
          "typeDefs": undefined,
          "version": "2.5.1",
          "watchQuery": [Function],
        }
      }
    >
      <div>
        Some simple
        <br
          key="1"
        />
        <br
          key="3"
        />
        text.
      </div>
    </ApolloProvider>
  </MockedProvider>
</Provider>
`;

exports[`Typography nl2br renders without any new lines 1`] = `
<Provider
  mocks={Array []}
>
  <MockedProvider
    addTypename={false}
    mocks={Array []}
  >
    <ApolloProvider
      client={
        ApolloClient {
          "__operations_cache__": Map {},
          "cache": InMemoryCache {
            "addTypename": false,
            "cacheKeyRoot": CacheKeyNode {
              "children": null,
              "key": null,
            },
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {},
          },
          "clearStoreCallbacks": Array [],
          "clientAwareness": Object {},
          "defaultOptions": Object {},
          "disableNetworkFetches": false,
          "link": ApolloLink {
            "request": [Function],
          },
          "localState": LocalState {
            "cache": InMemoryCache {
              "addTypename": false,
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "fragmentMatcher": HeuristicFragmentMatcher {},
                "resultCaching": true,
              },
              "data": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "maybeBroadcastWatch": [Function],
              "optimisticData": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "silenceBroadcast": false,
              "storeReader": StoreReader {
                "cacheKeyRoot": CacheKeyNode {
                  "children": null,
                  "key": null,
                },
                "executeSelectionSet": [Function],
                "executeStoreQuery": [Function],
              },
              "storeWriter": StoreWriter {},
              "typenameDocumentCache": Map {},
              "watches": Set {},
            },
            "client": [Circular],
          },
          "mutate": [Function],
          "query": [Function],
          "queryDeduplication": true,
          "reFetchObservableQueries": [Function],
          "resetStore": [Function],
          "resetStoreCallbacks": Array [],
          "ssrMode": false,
          "store": DataStore {
            "cache": InMemoryCache {
              "addTypename": false,
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "fragmentMatcher": HeuristicFragmentMatcher {},
                "resultCaching": true,
              },
              "data": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "maybeBroadcastWatch": [Function],
              "optimisticData": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "silenceBroadcast": false,
              "storeReader": StoreReader {
                "cacheKeyRoot": CacheKeyNode {
                  "children": null,
                  "key": null,
                },
                "executeSelectionSet": [Function],
                "executeStoreQuery": [Function],
              },
              "storeWriter": StoreWriter {},
              "typenameDocumentCache": Map {},
              "watches": Set {},
            },
          },
          "typeDefs": undefined,
          "version": "2.5.1",
          "watchQuery": [Function],
        }
      }
    >
      <div>
        Some simple text.
      </div>
    </ApolloProvider>
  </MockedProvider>
</Provider>
`;
